log & log {} = '&funcao' 120 [=] ^ invert & invert {} = '&funcao' 140 [=] ^ reduce & reduce {} = '&funcao' 209 [=] ^ a & a [] 0 1 [<=] 1 2 [<=] 2 3 [<=] 3 4 [<=] 4 5 [<=] = ^ a @ {} '&funcao' 288 [<=] 0 3 reduce @ $ 1 log @ $ ^ b & b [] 0 {} '&funcao' 317 [<=] [<=] 1 {} '&funcao' 333 [<=] [<=] = ^ pipe & pipe {} '&funcao' 379 [<=] = ^ b @ 9 2 pipe @ $ 1 log @ $ ^ b @ 1 invert @ $ 9 2 pipe @ $ 1 log @ $ ^ . msg & msg arguments @ 0 [@] = ^ msg @ println # undefined ^ undefined @ '&retorno' @ ~ a & a arguments @ 0 [@] = ^ res & res [] = ^ i & i 0 = ^ i @ a @ size [@] < 172 ? 199 # res @ a @ size [@] i @ - 1 - a @ i @ [@] [=] ^ i i @ 1 + = ^ 161 # res @ '&retorno' @ ~ undefined @ '&retorno' @ ~ a & a arguments @ 0 [@] = ^ f & f arguments @ 1 [@] = ^ x & x arguments @ 2 [@] = ^ i & i 0 = ^ i @ a @ size [@] < 253 ? 278 # x a @ i @ [@] x @ i @ 3 f @ $ = ^ i i @ 1 + = ^ 242 # x @ '&retorno' @ ~ undefined @ '&retorno' @ ~ x & x arguments @ 0 [@] = ^ y & y arguments @ 1 [@] = ^ x @ y @ + ^ undefined @ '&retorno' @ ~ x & x arguments @ 0 [@] = ^ 2 x @ * '&retorno' @ ~ x & x arguments @ 0 [@] = ^ x @ 1 + '&retorno' @ ~ f & f arguments @ 0 [@] = ^ x & x arguments @ 1 [@] = ^ x @ 1 f @ $ ^ undefined @ '&retorno' @ ~ af & af arguments @ 0 [@] = ^ x & x arguments @ 1 [@] = ^ af @ {} '&funcao' 349 [<=] x @ 3 reduce @ $ ^ undefined @ '&retorno' @ ~ 
